<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
   	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
	
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans. -->
	<context:component-scan base-package="com.elitecore" />
	
	<!-- Configures the annotation-driven Spring MVC Controller programming model. -->
	<mvc:annotation-driven /> 
	
	
	<context:property-placeholder location="classpath:database.properties" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />	
	
	<!-- Declare a datasource that has pooling capabilities-->	 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
				destroy-method="close"
				p:driverClass="${database.driver}"
				p:jdbcUrl="${database.url}"
				p:user="${database.user}"
				p:password="${database.password}"
				p:acquireIncrement="5" 			
				p:idleConnectionTestPeriod="60" 
				p:maxPoolSize="100"				
				p:maxStatements="50"
				p:minPoolSize="10" 				
	/>
	
	<!-- Info about Datasource Pooling capability properties
		#acquireIncrement        ===if create new batches if available connection about to run out(No. of new connections)
		#idleConnectionTestPeriod===limit to how long a connection will stay idle before testing it
		#maxpoolsize, minPoolSize===the maximum number of connections allowed in the connection pool for this specific connection string
		#maxStatements           === the maximum number of statements allowed in a function		
	 -->

 	<!-- Declare a JPA entityManagerFactory-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
		<property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml"></property>
		<property name="persistenceUnitName" value="hibernatePersistenceUnit" />
		<property name="dataSource" ref="dataSource"/>
	    <property name="jpaVendorAdapter">
	        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
	            <property name="showSql" value="true"/>
	        </bean>
	    </property>
    </bean>

	<!-- Declare a transaction manager-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	  
	<!-- Declaring ACID Transaction Properties -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		  <property name="dataSource" ref="dataSource"/>
	</bean>
	   
    <!-- Enable @Transactional annotation -->
    <tx:annotation-driven />
	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">  
		<property name="dataSource" ref="dataSource"></property>  
	</bean>  
  
	<bean id="dao" class="com.elitecore.dao.querydao">  
		<property name="template" ref="jt"></property>  
	</bean>  
	
</beans>
